#include "btree_iterator.h"
 
template <typename T>
T& btree_iterator<T>::operator*() const{
  return holder;
}
template <typename T>
T* btree_iterator<T>::operator->() const{
  return &holder;
}
template <typename T>
btree_iterator<T>& btree_iterator<T>::operator++() {
  return this;
}
template <typename T>
bool btree_iterator<T>::operator==(const btree_iterator<T>& other){
  return true;
}
template <typename T>
bool btree_iterator<T>::operator!=(const btree_iterator<T>& other){
  return true;
}
template <typename T>
btree_iterator<T>::btree_iterator( btree<T>* pointee): _pointee(pointee){
}
